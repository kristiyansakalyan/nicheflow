[tool.poetry]
name = "nicheflow"
version = "0.1.0"
description = ""
authors = [
    "Kristiyan Sakalyan <kristiyan.sakalyan@tum.de>",
    "Alessandro Palma <alessandro.palma@tum.de>",
    "Filippo Guerranti <filippo.guerranti@tum.de>",
]
license = "MIT"
readme = "README.md"

[tool.poetry.dependencies]
python = ">=3.11,<3.14"
torch = "2.5.1"
scanpy = "^1.11.4"
numpy = "^2.3.3"
tqdm = "^4.67.1"
torch-geometric = "^2.6.1"
scipy = "^1.16.2"
matplotlib = "^3.10.6"
moscot = { git = "https://github.com/theislab/moscot.git" }
flax = "^0.11.2"
diffrax = "^0.7.0"
jaxtyping = "^0.3.2"
lightning = "^2.5.5"
torchmetrics = "^1.8.2"
hydra-core = "^1.3.2"
hydra-submitit-launcher = "^1.2.0"
wandb = "^0.22.0"
torchcfm = "^1.0.7"


[tool.poetry.group.dev.dependencies]
ruff = "^0.13.1"
mypy = "^1.18.2"
ipykernel = "^6.30.1"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
line-length = 100
target-version = "py310"
src = ["src", "tests"]

[tool.ruff.lint]
select = [
    "E",   # pycodestyle
    "F",   # pyflakes
    "I",   # isort (import sorting)
    "B",   # flake8-bugbear
    "UP",  # pyupgrade
    "N",   # pep8-naming
    "PL",  # pylint (light rules)
    "RUF", # ruff-specific rules
]
ignore = [
    "E203", # allow Black-style slicing spacing if needed
]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
line-ending = "auto"
docstring-code-format = true

[tool.mypy]
python_version = "3.10"
files = ["src", "tests"]
show_error_codes = true
pretty = true
warn_unused_ignores = true
warn_return_any = true
no_implicit_optional = true
disallow_untyped_defs = true
check_untyped_defs = true

[[tool.mypy.overrides]]
module = [
    "torch.*",
    "numpy.*",
    "pandas.*",
    "sklearn.*",
    "matplotlib.*",
    "wandb.*",
]
ignore_missing_imports = true
